#!/usr/bin/env node

// Downloads PokÃ©mon Showdown's "minidexes" which contain animated sprite size information and
// then generates a combined JSON file with the data. For safety this process should take place
// in three steps:
//
//    1. `./import-sizes download` to download the files
//    2. manual inspection of the downloaded files so that you don't blindly execute remote code
//    3. `./import-sizes generate` to produce `src/data/sprites.json`

const fs = require('fs');
const https = require('https');
const path = require('path');
const url = require('url');

function fetch(u) {
  return new Promise((resolve, reject) => {
    let data = '';
    const req = https.get(u, res => {
      if (res.statusCode !== 200) {
        if (res.statusCode >= 300 && res.statusCode <= 400 && res.headers.location) {
          return resolve(fetch(url.resolve(u, res.headers.location)));
        } else {
          return reject(new Error(`HTTP ${res.statusCode}`));
        }
      }
      res.on('data', d => {
        data += d;
      });
      res.on('end', () => resolve(data));
    });
    req.on('error', reject);
    req.end();
  });
}

if (process.argv[2] !== 'generate') {
  (async () => {
    const data = path.resolve(__dirname, 'data');
    if (!fs.existsSync(data)) fs.mkdirSync(data);
    fs.writeFileSync(path.join(data, 'pokedex-mini.js'),
      await fetch('https://play.pokemonshowdown.com/data/pokedex-mini.js'));
    fs.writeFileSync(path.join(data, 'pokedex-mini-bw.js'),
      await fetch('https://play.pokemonshowdown.com/data/pokedex-mini-bw.js'));
  })();
}
if (process.argv[2] === 'download') process.exit(0);

const Sprites = require('./data/pokedex-mini').BattlePokemonSprites;
const BWSprites = require('./data/pokedex-mini-bw').BattlePokemonSpritesBW;

const SPRITES = {};
for (const name in Sprites) {
  const sprite = Sprites[name];
  const bwSprite = BWSprites[name];

  const s = SPRITES[name] = {num: sprite.num};

  if (sprite.front) s.f = sprite.front;
  if (sprite.frontf) s.ff = sprite.frontf;
  if (sprite.back) s.b = sprite.back;
  if (sprite.backf) s.bf = sprite.backf;

  if (bwSprite && (bwSprite.front || bwSprite.frontf || bwSprite.back || bwSprite.backf)) {
    s.bw = {}
    if (bwSprite.front) s.bw.f = bwSprite.front;
    if (bwSprite.frontf) s.bw.ff = bwSprite.frontf;
    if (bwSprite.back) s.bw.b = bwSprite.back;
    if (bwSprite.backf) s.bw.bf = bwSprite.backf;
  }
}

fs.writeFileSync(path.resolve(__dirname, 'src/data/sprites.json'), JSON.stringify(SPRITES));