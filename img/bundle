#!/usr/bin/env node
'use strict';

const fs = require('fs');
const path = require('path');
const babel = require('@babel/core');
const terser = require('terser');

const config = {
	'plugins': [
		['@babel/plugin-transform-typescript', {'isTSX': true}],
		['@babel/plugin-proposal-class-properties', {'loose': true}],
		['@babel/plugin-proposal-optional-chaining', {'loose': true}],
		['@babel/plugin-proposal-object-rest-spread', {'loose': true, 'useBuiltIns': true}],
		'@babel/plugin-proposal-optional-catch-binding',
		'@babel/plugin-transform-arrow-functions',
		['@babel/plugin-transform-block-scoping', {'throwIfClosureRequired': true}],
		['@babel/plugin-transform-classes', {'loose': true}],
		['@babel/plugin-transform-computed-properties', {'loose': true}],
		['@babel/plugin-transform-destructuring', {'loose': true, 'useBuiltIns': true}],
		['@babel/plugin-transform-for-of', {'assumeArray': true}],
		'@babel/plugin-transform-literals',
		'@babel/plugin-transform-parameters',
		'@babel/plugin-transform-shorthand-properties',
		['@babel/plugin-transform-spread', {'loose': true}],
		['@babel/plugin-transform-template-literals', {'loose': true}],
		'@babel/plugin-transform-member-expression-literals',
		'@babel/plugin-transform-property-literals'
	],
}


const built = path.resolve(__dirname, 'build');

const read = (f, b = 0, e = 0) => {
  try {
    const lines = fs.readFileSync(path.join(built, f), 'utf8').split('\n');
    return lines.slice(b, -e).join('\n');
  } catch (err) {
    if (err.code === 'ENOENT') {
      console.error(`Missing file 'build/${f}' - did you run \`npm run compile\`?`);
      process.exit(1);
    }
    throw err;
  }
};

let bundled = `(() => {
'use strict';
const exports = {};
`;
// Typescript is obnoxiously adding spaces for no apparent reason...
const json = fs.readFileSync(path.resolve(__dirname, 'src/data/data.json'), 'utf8');
bundled += `const DATA = ${json};\n`;
bundled += read('data/index.js', 11, 1);
bundled += read('adaptable.js', 2, 1);
bundled += `
// EXPORTS
window.PokemonSprites = new exports.Sprites(exports.Data);
window.PokemonSprites.SOURCES = exports.Sprites.SOURCES;
window.PokemonSprites.GENS = exports.Sprites.GENS;
window.PokemonSprites.ANIMATED = exports.Sprites.ANIMATED;
window.PokemonSprites.FRAME2 = exports.Sprites.FRAME2;
window.PokemonIcons = new exports.Icons(exports.Data);
})();`
bundled = babel.transformSync(bundled, config).code;
bundled = terser.minify(bundled).code;
fs.writeFileSync(path.join(built, 'production.min.js'), bundled);